@ngdoc overview
@name Data Binding
@description

Data-binding in Angular web apps is the automatic synchronization of data between the model and view
components.  The way that Angular implements data-binding lets you treat the model as the
single-source-of-truth in your application.  The view is a projection of the model at all times.
When the model changes, the view reflects the change, and vice versa.

在Angular网页应用中，数据绑定是数据模型(model)与视图(view)组件的自动同步。Angular的实现方式可以让你只需要关心应用中的数据模型部分。视图始终是数据模型的一种展现形式。当模型改变时，视图能反映这种改变；反之亦然。

## Data Binding in Classical Template Systems

## 典型模板系统中的数据绑定

<img class="right" src="img/One_Way_Data_Binding.png"/>
Most templating systems bind data in only one direction: they merge template and model components
together into a view, as illustrated in the diagram. After the merge occurs, changes to the model
or related sections of the view are NOT automatically reflected in the view. Worse, any changes
that the user makes to the view are not reflected in the model. This means that the developer has
to write code that constantly syncs the view with the model and the model with the view.

大多数模板系统中只有单向绑定：它们将模板和数据合并起来加入到视图中去，如图表中所示。合并完成之后，任何对数据模型或者相关内容的改变都不会自动反映到视图中去。更糟的是，用户对视图的任何改变也不会自动同步到数据模型中来。这意味着，开发者需要编写代码来保持视图与模板、模板与视图的同步。

## Data Binding in Angular Templates

## Angular模板中的数据绑定

<img class="right" src="img/Two_Way_Data_Binding.png"/>
The way Angular templates works is different, as illustrated in the diagram. They are different
because first the template (which is the uncompiled HTML along with any additional markup or
directives) is compiled on the browser, and second, the compilation step produces a live view. We
say live because any changes to the view are immediately reflected in the model, and any changes in
the model are propagated to the view. This makes the model always the single-source-of-truth for
the application state, greatly simplifying the programming model for the developer. You can think of
the view as simply an instant projection of your model.

Angular模板的工作方式不同，如图表中所示。主要体现在其一，模板（指未经编译的附加了标记及指令的HTML）是在浏览器编译的。其二，编译阶段生成了动态视图。保持视图动态的原因是，任何视图中的改变都会立刻反映到数据模型中去，任何数据模型的改变都会传播到视图中去。这使得数据模型始终是应用的单一操作来源。大幅的简化了开发者的编程核心。你可以将视图简单的理解为数据模型的实时映射。

Because the view is just a projection of the model, the controller is completely separated from the
view and unaware of it. This makes testing a snap because it is easy to test your controller in
isolation without the view and the related DOM/browser dependency.

因此，将视图作为数据模型的一种映射，使得控制器完全与视图分离，而不必关心视图的展现。这使得测试变得小菜一碟，你可以在没有视图和有关DOM/浏览器的依赖情况下轻松测试你的应用。

## Related Topics

## 相关主题 

* {@link scope Angular Scopes}
* {@link templates Angular Templates}
